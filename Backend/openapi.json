{
  "openapi": "3.0.0",
  "info": {
    "title": "Athena API Documentation",
    "description": "CRUD API for User, Client, ClientDetail, and Product",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sandhiguna.com/"
    }
  ],
  "paths": {
    "/Login": {
      "post": {
        "summary": "auth access for website",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Login"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Register": {
      "post": {
        "summary": "register account in website",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register was create",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Register"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Verification": {
      "post": {
        "summary": "check OTP message in email",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Verification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification was successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Verification"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Reset-Password": {
      "post": {
        "summary": "reset for password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reset password successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Repassword"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/New-Password/{token}": {
      "post": {
        "summary": "create new password by token",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "token for create new password"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Newpassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new password success update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Newpassword"
                  }
                }
              }
            }
          },
          "404": {
            "description": "token not found"
          }
        }
      }
    },
    "/Verification-data/{token}": {
      "post": {
        "summary": "token verification data to access edit data",
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "token for updated your data"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Verdata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new data success update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Verdata"
                  }
                }
              }
            }
          },
          "404": {
            "description": "token not found"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "summary": "Get all clients",
        "tags": [
          "Clients"
        ],
        "responses": {
          "200": {
            "description": "A list of clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "summary": "Get client by ID",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Client found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          }
        }
      },
      "put": {
        "summary": "Update a client by ID",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully"
          },
          "404": {
            "description": "Client not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a client by ID",
        "tags": [
          "Clients"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Client deleted successfully"
          },
          "404": {
            "description": "Client not found"
          }
        }
      }
    },
    "/client-details": {
      "get": {
        "summary": "Get all client details",
        "tags": [
          "Client Details"
        ],
        "responses": {
          "200": {
            "description": "A list of client details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDetail"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new client detail",
        "tags": [
          "Client Details"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDetail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client detail created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/client-details/{id}": {
      "get": {
        "summary": "Get client detail by ID",
        "tags": [
          "Client Details"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client detail ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Client detail found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDetail"
                }
              }
            }
          },
          "404": {
            "description": "Client detail not found"
          }
        }
      },
      "put": {
        "summary": "Update a client detail by ID",
        "tags": [
          "Client Details"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client detail ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client detail updated successfully"
          },
          "404": {
            "description": "Client detail not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a client detail by ID",
        "tags": [
          "Client Details"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Client detail ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Client detail deleted successfully"
          },
          "404": {
            "description": "Client detail not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get product by ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update a product by ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Product ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Product ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "summary": "Submit a Contact Us message",
        "tags": [
          "Contact Us"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactUs"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "example": "Password@123"
          },
          "fullname": {
            "type": "string",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "example": 8123456789
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "role": {
            "type": "string",
            "example": "admin"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "username",
          "password",
          "role"
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "example": "asep"
          },
          "password": {
            "type": "string",
            "example": "dada1234!"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Register": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "example": "asep"
          },
          "email": {
            "type": "string",
            "example": "jajan@example.com"
          },
          "password": {
            "type": "string",
            "example": "Cicak1234!"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "Verification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "otp": {
            "type": "integer",
            "example": 218316
          }
        }
      },
      "Repassword": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "example": "tes@example.com"
          }
        }
      },
      "Newpassword": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "example": "tes@example.com"
          },
          "otp": {
            "type": "integer",
            "example": 601999
          },
          "newPassword": {
            "type": "string",
            "example": "Bom1234!"
          }
        }
      },
      "Verdata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fullname": {
            "type": "string",
            "example": "tes bla"
          },
          "phone": {
            "type": "string",
            "example": 8123456789
          },
          "address": {
            "type": "string",
            "example": "jalan piro iki no.12"
          },
          "category_business": {
            "type": "string",
            "example": "Hiburan"
          },
          "description_business": {
            "type": "string",
            "example": "menyediakan banyak kesenangan dan kebahagiaan untuk merelekskan dari hiru pikuk dunia"
          },
          "image": {
            "type": "string",
            "example": "svg"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "example": "client@example.com"
          },
          "password": {
            "type": "string",
            "example": "Password@123"
          },
          "otp": {
            "type": "integer",
            "example": 123456
          },
          "status_verification_email": {
            "type": "boolean",
            "example": false
          },
          "status_verification_data": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "otp"
        ]
      },
      "ClientDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "fullname": {
            "type": "string",
            "example": "Client Name"
          },
          "phone": {
            "type": "string",
            "example": 8123456789
          },
          "address": {
            "type": "string",
            "example": "Jl. Example No. 123"
          },
          "category_business": {
            "type": "string",
            "example": "Retail"
          },
          "description_business": {
            "type": "string",
            "example": "Retail business description here"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "fullname",
          "phone",
          "address",
          "category_business",
          "description_business"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Product 1"
          },
          "csr_key": {
            "type": "string"
          },
          "postman_pem": {
            "type": "string"
          },
          "slot_id": {
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "finance_key": {
            "type": "string"
          },
          "status": {
            "type": "boolean",
            "example": false
          },
          "call_api": {
            "type": "integer",
            "nullable": true
          },
          "count_trial": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "name",
          "csr_key",
          "postman_pem",
          "slot_id",
          "password",
          "finance_key"
        ]
      },
      "ContactUs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "example": "coba"
          },
          "lastName": {
            "type": "string",
            "example": "dulu"
          },
          "emailAddress": {
            "type": "string",
            "example": "cobadulu@example.com"
          },
          "message": {
            "type": "string",
            "example": "salam tes"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "emailAddress",
          "message"
        ]
      }
    }
  }
}